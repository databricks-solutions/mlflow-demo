[project]
name = "mlflow-email-demo"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
  "fastapi[standard]>=0.115.8",
  "mlflow[databricks]>=3.2",
  "python-dotenv>=1.0.1",
  "uvicorn>=0.34.0",
  "openai>=1.66.0",
  "httpx>=0.28.0",
  "pydantic>=2.10.0",
  "databricks-sdk>=0.36.0",
  "requests>=2.31.0",
  # Conflict resolution pins for Databricks Apps pre-installed packages
  "tenacity==9.0.0",
  "pillow==11.1.0",
  "websockets==15.0",
  "pyarrow==18.1.0",
  "markupsafe==3.0.2",
  "rich==14.0.0",
  "protobuf==6.31.1",
  "pandas==2.3.0",
  "flask==3.1.0",
  "werkzeug==3.1.3",
  "nbconvert>=7.16.6",
  "ipykernel>=6.29.5",
]

[dependency-groups]
dev = [
  "click>=8.1.8",
  "ruff>=0.9.6",
  "watchdog[watchmedo]>=6.0.0",
  "databricks-connect==16.1.6",
  "ipykernel>=6.29.5",
]


[tool.ruff]
src = ["server"]
line-length = 100
indent-width = 2
target-version = "py312"
fix = true

# Exclude a variety of commonly ignored directories.
exclude = [
  "__pycache__",
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "setup/",
  "*.ipynb",
  "**/*.ipynb",
  "**/WORKING_DASH_CODE/",
  "**/notebooks/WORKING_DASH_CODE/",
]

[tool.ruff.lint]
# Enable Pyflakes `F`, pycodestyle "W" and `E`, "Q" quotes, "I" imports.
ignore = [
  "D105", # Missing docstring in magic method.
  "D106", # Missing docstring in a public nested class.
  "D107", # Missing docstring in __init__.
  "D203", # 1 blank line required before class docstring.
  "D204", # 1 blank line required after class docstring.
  "D213", # Multi-line docstring summary should start at the second line.
  "D401", # First line of docstring should be in imperative mood: "{first_line}"
  "D407", # Missing dashed underline after section.
]
select = ["E", "W", "F", "Q", "I", "D"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"*_test.py" = ["D101", "D102", "D103", "D104"]
"__init__.py" = ["D104"]
"setup/notebook_log_generator.py" = ["E402", "W291", "W293", "E501"]
"mlflow_demo/agent/prompts.py" = ["E501"]
"mlflow_demo/evaluation/evaluator.py" = ["E501"]

[tool.ruff.lint.pep8-naming]
# Allow Pydantic's `@validator` decorator to trigger class method treatment.
classmethod-decorators = ["classmethod", "pydantic.validator"]

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"


[tool.ruff.lint.pydocstyle]
convention = "google"
